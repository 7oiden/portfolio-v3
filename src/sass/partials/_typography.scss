p,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

em {
  color: getColor(textBright);
  font-style: unset;
  font-weight: 500;
}

.paragraph-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  line-height: 1.6;
  overflow: hidden;
}

.hero__hgroup {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.hero__heading {
  font-size: getSize(heroHeadingS);
  color: getColor(heroHeading);

  &--top {
    display: block;
    font-family: $logo;
    font-weight: 400;
    font-size: getSize(heroTopHeadingM);
    color: getColor(headingAccent);

    @media (min-width: getBreakpoint(medium)) {
      font-size: getSize(heroTopHeadingM);
    }

    @media (min-width: getBreakpoint(large)) {
      font-size: getSize(heroTopHeadingL);
    }
  }

  &--main {
    font-weight: 700;
    font-size: getSize(heroHeadingS);
    color: getColor(textBright);
    text-shadow: 0 0.5px getColor(heroHeading);

    @media (min-width: getBreakpoint(medium)) {
      font-size: getSize(heroHeadingM);
    }

    @media (min-width: getBreakpoint(large)) {
      font-size: getSize(heroHeadingL);
    }
  }

  &--sub {
    font-weight: 300;
    font-size: getSize(heroSubHeadingS);
    color: getColor(textLight);

    @media (min-width: getBreakpoint(medium)) {
      font-size: getSize(heroSubHeadingM);
    }

    @media (min-width: getBreakpoint(large)) {
      font-size: getSize(heroSubHeadingL);
    }
  }

  &--dot {
    color: getColor(headingAccent);
    text-shadow: 0 1px getColor(headingAccent);
  }

  @media (min-width: getBreakpoint(medium)) {
    font-size: getSize(heroHeadingM);
  }

  @media (min-width: getBreakpoint(large)) {
    font-size: getSize(heroHeadingL);
  }
}

.typed-cursor {
  color: getColor(textLight);
  font-size: 2rem;
  line-height: 1;
}

.page-heading {
  font-size: getSize(pageHeadingS);
  font-weight: 700;
  color: getColor(textBright);

  @media (min-width: getBreakpoint(medium)) {
    font-size: getSize(pageHeadingM);
  }

  @media (min-width: getBreakpoint(large)) {
    font-size: getSize(pageHeadingL);
  }

  &__dot {
    color: getColor(headingAccent);
  }
}

.section-heading {
  font-size: getSize(sectionHeadingS);
  font-weight: 500;
  color: getColor(textBright);

  @media (min-width: getBreakpoint(medium)) {
    font-size: getSize(sectionHeadingM);
  }

  @media (min-width: getBreakpoint(large)) {
    font-size: getSize(sectionHeadingL);
  }
}

.sub-heading {
  font-size: getSize(subHeadingS);
  font-weight: 500;
  color: getColor(headingAccent);
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1.5rem;

  @media (min-width: getBreakpoint(medium)) {
    font-size: getSize(subHeadingM);
  }

  @media (min-width: getBreakpoint(large)) {
    font-size: getSize(subHeadingL);
  }
}

.footer__heading {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 600;
  text-transform: uppercase;
}

.skill-badge__label {
  font-size: 0.875rem;
  font-weight: 500;
}

.card__heading {
  font-size: 1.25rem;
  font-weight: 500;
  color: getColor(textBright);
  color: rgb(203 213 225);
  margin-bottom: 0.5rem;
}

.card__sub-heading {
  font-size: 1rem;
  font-weight: 600;
  color: getColor(headingAccent);
  text-transform: uppercase;
}

.text-badge__text {
  color: getColor(accentCol2);
  font-size: getSize(badgeText);
}

.path__heading {
  margin-bottom: 2rem;

  @media (min-width: getBreakpoint(large)) {
    text-align: center;
    margin-bottom: 3rem;
  }
}

.info-box__heading {
  font-size: 1rem;
  font-weight: 500;
  color: getColor(textBright);
  color: rgb(203 213 225);
}

.info-box__sub-heading {
  font-size: 0.9rem;
  font-weight: 600;
  color: getColor(headingAccent);
  text-transform: uppercase;

  @media (min-width: getBreakpoint(large)) {
    font-size: 1rem;
  }
}

.info-box__text {
  font-size: 0.875rem;

  @media (min-width: getBreakpoint(large)) {
    font-size: 1rem;
  }
}

.input-error {
  display: block;
  font-size: 0.875rem;
  font-weight: 400;
  color: getColor(errorInput);
  padding-top: 0.25rem;
}

#textarea-error {
  padding-top: 0;
}
